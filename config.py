import requests
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
token="5256652879:AAEg8WdI6D1-zJGUlsOGnYZ4kY-ZidQ3cy4"
admins=[1639410915]
button1='–°–µ–≥–æ–¥–Ω—è'
button2='–ó–∞–≤—Ç—Ä–∞'
button3='üìÜ –í—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
button4='üìù –î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏'
nazad='üîô –ù–∞–∑–∞–¥'
btn1='‚è∞ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–¥–∏–ª—å–Ω–∏–∫'
btn2='üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–º–µ—Ç–∫—É'
btn3='üéì –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ñ–µ–¥—Ä—É'
btn4='üìù –ú–æ–∏ –∑–∞–º–µ—Ç–∫–∏'
def perv_para(day, raspis, chis):
    timer=["",510,615,720,830,940,1045,1150]
    timerFV=["","",600,740,845,950]
    if day==7:
        return "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –æ—Ç–¥—ã—Ö–∞–π—Ç–µ"
    else:
        if day==8:
            day=1
            chis=abs(chis-1)
        raspis=raspis[1]
        ras=0
        for i in raspis:
            if i[0]==day:
                for i2 in i[1]:
                    if len(i2[1])>1:
                        for i3 in i2[1]:
                            if chis==0 and i3[0]=="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
                                if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i3[1]:
                                    ras= timerFV[i2[0]]                                   
                                else:
                                    ras= timer[i2[0]]
                                break
                            elif chis==1 and i3[0]=='–ß–∏—Å–ª–∏—Ç–µ–ª—å':
                                if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i3[1]:
                                    ras= timerFV[i2[0]]                                   
                                else:
                                    ras= timer[i2[0]]
                                break
                    else:
                        if chis==0 and i2[1][0][0]=="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
                            if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i2[1][0][1]:        
                                ras= timerFV[i2[0]]                             
                            else:                        
                                ras= timer[i2[0]]
                            break
                        elif chis==1 and i2[1][0][0]=="–ß–∏—Å–ª–∏—Ç–µ–ª—å":
                            if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i2[1][0][1]:        
                                ras= timerFV[i2[0]]                             
                            else:                        
                                ras= timer[i2[0]]
                            break
                        elif i2[1][0][0]=="–û–±–∞ –¥–Ω—è":
                            if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i2[1][0][1]:        
                                ras= timerFV[i2[0]]                           
                            else:                        
                                ras= timer[i2[0]]
                            break
                if ras!=0:
                    break
    return ras    

def chisa(): 
    a=requests.get('https://lks.bmstu.ru/schedule/list')
    b=a.content.decode('utf-8')
    b=b.replace(" ","",b.count(" "))
    b=b.split("\n")
    c=[]
    for i in range(len(b)):
        if 'ahref="' in b[i]:
            d=b[i].split('"')
            c.append([b[i+1],d[1]])
    pras=[]
    for i in range(len(c)):
        if not "<" in c[i][0]:
            a=requests.get('https://lks.bmstu.ru'+c[i][1])
            b=a.content.decode('utf-8')
            if "—á–∏—Å–ª–∏—Ç–µ–ª—å" in b:
                return int(1)
            elif "–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å" in b:
                return int(0)

def pars(parametr):
    if parametr=="–ò–£5-55–ë":
        return ['–ò–£5-55–ë', [[1, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 1/2 306—ç']]], [6, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903']]], [7, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903']]]]], [2, [[4, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –∫–∞—Ñ. –õ2  ']]], [6, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã 515—é –°–µ–º–∫–∏–Ω –ü. –°. ']]], [7, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 515—é –ö–∞–Ω–µ–≤ –ê. –ò. ']]]]], [3, [[3, [['–û–±–∞ –¥–Ω—è', '–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞   ']]]]], [4, [[2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. ']]], [3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. '], ['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [4, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]]]], [5, [[1, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [3, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö 524 –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤ –ö. –Æ., –°–µ–ª–∏–≤–µ—Ä—Å—Ç–æ–≤–∞ –ê. –í. ']]],[4,[['–û–±–∞ –¥–Ω—è','–ª—Ä –í–° 2/2 306—ç']]]]], [6, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç']]],[2, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ –ª—Ä 306—ç']]],[3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–° –ª—Ä 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ –ª—Ä 306—ç']]],[4, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–° –ª—Ä 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü –ª—Ä 306—ç']]],[5, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü –ª—Ä 306—ç']]]]]]]
    elif parametr=="–ò–£5-54–ë":
        return ['–ò–£5-54–ë', [[1, [[4, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç']]], [5, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç']]], [6, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]], [7, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]]]], [2, [[5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]],  [6, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã 515—é –°–µ–º–∫–∏–Ω –ü. –°. ']]], [7, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 515—é –ö–∞–Ω–µ–≤ –ê. –ò. ']]]]], [3, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[2, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[5, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[6, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–í–° 2/2 306—ç']]],[7, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–í–° 2/2 306—ç']]] ]], [4, [[1, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –∫–∞—Ñ. –õ2  ']]],[2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. ']]], [3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. '], ['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [4, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]]]], [5, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–ê–î –ª—Ä 362'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [3, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö 524 –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤ –ö. –Æ., –°–µ–ª–∏–≤–µ—Ä—Å—Ç–æ–≤–∞ –ê. –í. ']]],[4,[['–û–±–∞ –¥–Ω—è','(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]]]], [6, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 1/2 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–° –ª—Ä 903']]],[2, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 1/2 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–° –ª—Ä 903']]],[3, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç']]]]]]]    
    elif parametr=="–ò–£5-53–ë":
        return ['–ò–£5-53–ë', [[1, [[4, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903']]], [5, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903']]], [6, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']], [7, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]]]]], [2, [[6, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã 515—é –°–µ–º–∫–∏–Ω –ü. –°. ']]], [7, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 515—é –ö–∞–Ω–µ–≤ –ê. –ò. ']]]]], [3, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[2, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[5, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[6, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–í–° 2/2 306—ç']]],[7, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–í–° 2/2 306—ç']]] ]], [4, [[2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. ']]], [3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. '], ['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [4, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]]]], [5, [[1, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [3, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö 524 –°–µ–ª–∏–≤–µ—Ä—Å—Ç–æ–≤–∞ –ê. –í., –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤ –ö. –Æ. ']]], [4, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 235–ª, 401–ª  ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]]]], [6, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 1/2 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç']]],[2, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 1/2 306—ç'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç']]],[3, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–° –ª—Ä 903']]],[4, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–û–° –ª—Ä 903']]]]]]]
    elif parametr=="–ò–£5-52–ë":
        return ['–ò–£5-52–ë', [[1, [[4, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç']]], [5, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç']]], [6, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]], [7, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]]]], [2, [[4, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 235–ª, 401–ª  ']]], [6, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã 515—é –°–µ–º–∫–∏–Ω –ü. –°. ']]], [7, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 515—é –ö–∞–Ω–µ–≤ –ê. –ò. ']]]]], [3, [[1, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[2, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[3, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[5, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[6, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 2/2 306—ç']]],[7, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 2/2 306—ç']]] ]], [4, [[2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. ']]], [3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. '], ['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [4, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]]]], [5, [[1, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [3, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö 524 –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤ –ö. –Æ., –°–µ–ª–∏–≤–µ—Ä—Å—Ç–æ–≤–∞ –ê. –í. ']]],[4, [['–û–±–∞ –¥–Ω—è', '–ª—Ä –í–° 1/2 306—ç']]]]], [6, [[4, [['–û–±–∞ –¥–Ω—è', '–û–ê–î –ª—Ä 306—ç']]],[5, [['–û–±–∞ –¥–Ω—è', '–û–° –ª—Ä 903']]]]]]]
    elif parametr=="–ò–£5-51–ë":
        return ['–ò–£5-51–ë', [[1, [[1, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 1/2 306—ç']]], [4, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç']]], [5, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 1/2 306—ç']]], [6, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]],[7, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 1/2 306—ç']]]]], [2, [[5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]], [6, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã 515—é –°–µ–º–∫–∏–Ω –ü. –°. ']]], [7, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 515—é –ö–∞–Ω–µ–≤ –ê. –ò. ']]]]], [3, [[1, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[2, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–†–ò–ü 2/2 306—ç']]],[3, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[5, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–°–¢ 2/2 306—ç']]],[6, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 2/2 306—ç']]],[7, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–í–° 2/2 306—ç']]] ]], [4, [[2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. ']]], [3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '(–ª–µ–∫) –°–µ—Ç–∏ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ 515—é –ì–∞–ª–∫–∏–Ω –í. –ê. '], ['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [4, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –¢–µ–æ—Ä–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 515—é –õ—É–∫—å—è–Ω–æ–≤ –í. –í. ']]], [5, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ 235–ª, 401–ª  ']]], [6, [['–û–±–∞ –¥–Ω—è', '(—Å–µ–º) –≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–µ –∏ —Å–ø–æ—Ä—Ç—É   ']]]]], [5, [[1, [['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [2, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ê–°–û–ò–£ 524 –°–ø–∏—Ä–∏–¥–æ–Ω–æ–≤ –°. –ë. ']]], [3, [['–û–±–∞ –¥–Ω—è', '(–ª–µ–∫) –û–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö 524 –ú–∞—Å–ª–µ–Ω–∏–∫–æ–≤ –ö. –Æ., –°–µ–ª–∏–≤–µ—Ä—Å—Ç–æ–≤–∞ –ê. –í. ']]],[4, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–ª—Ä –û–° 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903']]],[5, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–ª—Ä –û–° 903'],['–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', '–ü—Ä-–∫–∞ 903']]]]], [6, [[3, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç']]],[4, [['–ß–∏—Å–ª–∏—Ç–µ–ª—å', '–û–ê–î –ª—Ä 306—ç']]]]]]]
    else:
        a=requests.get('https://lks.bmstu.ru/schedule/list')
        b=a.content.decode('utf-8')
        b=b.replace(" ","",b.count(" "))
        b=b.split("\n")
        c=[]
        for i in range(len(b)):
            if 'ahref="' in b[i]:
                d=b[i].split('"')
                c.append([b[i+1],d[1]])
        pras=[]
        for i in range(len(c)):
            if not "<" in c[i][0]:
                if c[i][0]==parametr:
                    a=requests.get('https://lks.bmstu.ru'+c[i][1])
                    b=a.content.decode('utf-8')
                    b=b.split('<div class="col-md-6 d-block d-md-none">')
                    bereta=[]
                    for day in range(len(b)):
                        raspis=b[day].split("<tr>")
                        greta=[]
                        for para in range(len(raspis)):
                            konech=raspis[para].split("\n")
                            paravoz=[]
                            flag=False
                            for i1 in konech:
                                if not '<!--–î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è -->' in i1:
                                    if '<td class="text-info-bold">' in i1:
                                        filt=i1.split('<')
                                        slovo=''
                                        try:
                                            if not "/td>" in filt[2]:
                                                slovo+=filt[2]+" "
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[4]:
                                                slovo+=filt[4]+" "                                
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[6]:
                                                slovo+=filt[6]+" "                                 
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[8]:
                                                slovo+=filt[8]+" "
                                        except:
                                            pass 
    
                                        slovo=slovo.replace("/i>","").replace("i>","").replace("/span>","").replace("span>","")
                                        if len(slovo)!=0:
                                            paravoz.append(["–ß–∏—Å–ª–∏—Ç–µ–ª—å",slovo])
                                    elif '<td class="text-primary">'  in i1:
                                        filt=i1.split('<')
                                        slovo=''
                                        try:
                                            if not "/td>" in filt[2]:
                                                slovo+=filt[2]+" "
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[4]:
                                                slovo+=filt[4]+" "                                
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[6]:
                                                slovo+=filt[6]+" "                                 
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[8]:
                                                slovo+=filt[8]+" "
                                        except:
                                            pass 
    
                                        slovo=slovo.replace("/i>","").replace("i>","").replace("/span>","").replace("span>","")
                                        if len(slovo)!=0:
                                            paravoz.append(["–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å",slovo]) 
                                    elif '<td colspan="2">'  in i1:
                                        filt=i1.split('<')
                                        slovo=''
                                        try:
                                            if not "/td>" in filt[2]:
                                                slovo+=filt[2]+" "
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[4]:
                                                slovo+=filt[4]+" "                                
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[6]:
                                                slovo+=filt[6]+" "                                 
                                        except:
                                            pass
                                        try:
                                            if not "/td>" in filt[8]:
                                                slovo+=filt[8]+" "
                                        except:
                                            pass 
                                        slovo=slovo.replace("/i>","").replace("i>","").replace("/span>","").replace("span>","")
                                        if len(slovo)!=0:
                                            paravoz.append(["–û–±–∞ –¥–Ω—è",slovo])
                                else:
                                    
                                    flag=True
                                    break
                            if flag:
                                if len(paravoz)!=0:
                                    greta.append([para-1,paravoz])
                                break
                            if len(paravoz)!=0:
                                greta.append([para-1,paravoz])
                        if len(greta)!=0:
                            bereta.append([day,greta])
                    pras+=[c[i][0],bereta]
        print (pras)
        return pras

def user():
    markup = types.InlineKeyboardMarkup()
    a1=types.InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è',callback_data="–°–µ–≥–æ–¥–Ω—è")
    a2=types.InlineKeyboardButton('–ó–∞–≤—Ç—Ä–∞',callback_data="–ó–∞–≤—Ç—Ä–∞")
    a3=types.InlineKeyboardButton('üìÜ –í—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ',callback_data="üìÜ –í—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    a4=types.InlineKeyboardButton('üìù –î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',callback_data="üìù –î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
    markup.add(a1, a2)
    markup.add(a3)
    markup.add(a4)
    return markup
def nazad(name):
    markup = types.InlineKeyboardMarkup()
    a4=types.InlineKeyboardButton('üòâ–ù–∞–∑–∞–¥üòâ',callback_data="üòâ–ù–∞–∑–∞–¥üòâ")
    a5=types.InlineKeyboardButton('üòâ–£–¥–∞–ª–∏—Ç—åüòâ',callback_data="üòâ"+name)
    markup.add(a4)
    markup.add(a5)
    return markup
def nazad1():
    markup = types.InlineKeyboardMarkup()
    a5=types.InlineKeyboardButton('üò¥–ù–∞–∑–∞–¥üò¥',callback_data="üò¥–ù–∞–∑–∞–¥üò¥")
    markup.add(a5)
    return markup
def soglas(name):
    markup = types.InlineKeyboardMarkup()
    a5=types.InlineKeyboardButton('–î–∞',callback_data=name+"üò°")
    a6=types.InlineKeyboardButton('–ù–µ—Ç',callback_data="üòâ–ù–∞–∑–∞–¥üòâ")
    markup.add(a5)
    markup.add(a6)
    return markup

def settings():
    markup = types.InlineKeyboardMarkup()
    a1=types.InlineKeyboardButton('‚è∞ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–¥–∏–ª—å–Ω–∏–∫',callback_data="‚è∞ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–¥–∏–ª—å–Ω–∏–∫")
    a2=types.InlineKeyboardButton('üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–º–µ—Ç–∫—É',callback_data="üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–º–µ—Ç–∫—É")
    a3=types.InlineKeyboardButton('üéì –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ñ–µ–¥—Ä—É',callback_data="üéì –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ñ–µ–¥—Ä—É")
    a4=types.InlineKeyboardButton('üìù –ú–æ–∏ –ó–∞–º–µ—Ç–∫–∏',callback_data='üìù –ú–æ–∏ –∑–∞–º–µ—Ç–∫–∏')
    a5=types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥',callback_data='üîô –ù–∞–∑–∞–¥')
    markup.add(a2)
    markup.add(a3)
    markup.add(a4)
    markup.add(a5)
    return markup

def pars_day(day, raspis, chis):
    timer=["","08:30 - 10:05","10:15 - 11:50","12:00 - 13:35","13:50 - 15:25","15:40 - 17:15","17:25 - 19:00","19:10 - 20:45"]
    timerFV=["","","10:00 - 11:30","12:20 - 13:25","14:05 - 14:15","15:50 - 17:20"]
    days=["","–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫","–í—Ç–æ—Ä–Ω–∏–∫","–°—Ä–µ–¥–∞","–ß–µ—Ç–≤–µ—Ä–≥","–ü—è—Ç–Ω–∏—Ü–∞","–°—É–±–±–æ—Ç–∞"]
    if day==7:
        return "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –æ—Ç–¥—ã—Ö–∞–π—Ç–µ"
    else:
        if day==8:
            day=1
            chis=abs(chis-1)
        raspis=raspis[1]
        ras=""
        for i in raspis:
            if i[0]==day:
                ras+=days[day]+"\n"
                for i2 in i[1]:
                    if len(i2[1])>1:
                        for i3 in i2[1]:
                            if chis==0 and i3[0]=="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
                                if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i3[1]:
                                    ras+= timerFV[i2[0]]+ "\n"
                                    ras+=i3[1]+"\n"                                    
                                else:
                                    ras+= timer[i2[0]]+ "\n"
                                    ras+=i3[1]+"\n"
                            elif chis==1 and i3[0]=="–ß–∏—Å–ª–∏—Ç–µ–ª—å":
                                if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i3[1]:
                                    ras+= timerFV[i2[0]]+ "\n"
                                    ras+=i3[1]+"\n"                                    
                                else:
                                    ras+= timer[i2[0]]+ "\n"
                                    ras+=i3[1]+"\n"
                    else:
                        if chis==0 and i2[1][0][0]=="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
                            if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i2[1][0][1]:        
                                ras+= timerFV[i2[0]]+ "\n"
                                ras+=i2[1][0][1]+ "\n"                                  
                            else:                        
                                ras+= timer[i2[0]]+ "\n"
                                ras+=i2[1][0][1]+ "\n"
                        elif chis==1 and i2[1][0][0]=="–ß–∏—Å–ª–∏—Ç–µ–ª—å":
                            if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i2[1][0][1]:        
                                ras+= timerFV[i2[0]]+ "\n"
                                ras+=i2[1][0][1]+ "\n"                                  
                            else:                        
                                ras+= timer[i2[0]]+ "\n"
                                ras+=i2[1][0][1]+ "\n"
                        elif i2[1][0][0]=="–û–±–∞ –¥–Ω—è":
                            if "–≠–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å" in i2[1][0][1]:        
                                ras+= timerFV[i2[0]]+ "\n"
                                ras+=i2[1][0][1]+ "\n"                                  
                            else:                        
                                ras+= timer[i2[0]]+ "\n"
                                ras+=i2[1][0][1]+ "\n"
        if ras=="":
            ras+=days[day]+"\n"
            ras+="–£ –≤–∞—Å –Ω–µ—Ç –ø–∞—Ä –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å"
    return ras
def budil():
        markup = types.InlineKeyboardMarkup()
        a1=types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∑–∞ —Å–∫–æ–ª—å–∫–æ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å",callback_data="ZADERSCH")    
        a2=types.InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="–ù–∞–∑–∞–¥")
        markup.add(a1)
        markup.add(a2)
        return markup

def zaderch():
        markup = types.InlineKeyboardMarkup()
        a1=types.InlineKeyboardButton("–°–Ω—è—Ç—å –±—É–¥–∏–ª—å–Ω–∏–∫",callback_data="SNAT") 
        a2=types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∑–∞ —Å–∫–æ–ª—å–∫–æ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å",callback_data="ZADERSCH")    
        a3=types.InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="–ù–∞–∑–∞–¥")
        markup.add(a1)
        markup.add(a2)
        markup.add(a3)
        return markup

def moi_zametki(telegram_id,dates):
    markup = types.InlineKeyboardMarkup()
    r=dates.split()
    for i in range(len(r)):
        if r[i]!="%^&@#":
            a1=types.InlineKeyboardButton(r[i],callback_data=str(telegram_id)+"#1@3$"+str(i+1))
            markup.add(a1)
    a1=types.InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="–ù–∞–∑–∞–¥")
    markup.add(a1)
    return markup
def all_para(raspis):
    timer=["","08:30 - 10:05","10:15 - 11:50","12:00 - 13:35","13:50 - 15:25","15:40 - 17:15","17:25 - 19:00","19:10 - 20:45"]
    days=["","–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫","–í—Ç–æ—Ä–Ω–∏–∫","–°—Ä–µ–¥–∞","–ß–µ—Ç–≤–µ—Ä–≥","–ü—è—Ç–Ω–∏—Ü–∞","–°—É–±–±–æ—Ç–∞"]
    raspis=raspis[1]
    ras=""
    for i in raspis:
        ras+=days[i[0]]+"\n"
        for i2 in i[1]:
            ras+= timer[i2[0]]+ "\n"
            for i3 in i2[1]:
                if i3[0]=="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å":
                    ras+="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å:"+" "+i3[1]+"\n"
                elif i3[0]=='–ß–∏—Å–ª–∏—Ç–µ–ª—å':
                    ras+='–ß–∏—Å–ª–∏—Ç–µ–ª—å:'+" "+i3[1]+"\n"
                else:
                    ras+=str(i3[1])+"   "

            ras+="\n\n" 
        ras+="__________________________________%#%"
    return ras
    